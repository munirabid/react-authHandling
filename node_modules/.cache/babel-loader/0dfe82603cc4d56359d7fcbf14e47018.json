{"ast":null,"code":"var _jsxFileName = \"C:\\\\Muneer\\\\React\\\\react-auth-handling\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  Login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjRmeianingTime = new Date(expirationTime).getTime();\n  const remainingTime = adjRmeianingTime - currentTime;\n  return remainingTime;\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem(\"token\");\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, 3000);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"s3jk56xWU5XKZXYqw5SfcwTuysU=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Muneer/React/react-auth-handling/src/store/auth-context.js"],"names":["React","useState","logoutTimer","AuthContext","createContext","token","isLoggedIn","Login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjRmeianingTime","remainingTime","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","userIsLoggedIn","logoutHandler","removeItem","clearTimeout","loginHandler","setItem","setTimeout","contextValue","login","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAIC,WAAJ;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACtCC,EAAAA,KAAK,EAAE,EAD+B;AAEtCC,EAAAA,UAAU,EAAE,KAF0B;AAGtCC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHkB;AAItCG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJsB,CAApB,CAApB;;AAOA,MAAMC,sBAAsB,GAAIC,cAAD,IAAoB;AACjD,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,gBAAgB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAAzB;AAEA,QAAME,aAAa,GAAGD,gBAAgB,GAAGH,WAAzC;AAEA,SAAOI,aAAP;AACD,CAPD;;AASA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAACf,KAAD,EAAQgB,QAAR,IAAoBpB,QAAQ,CAACiB,YAAD,CAAlC;AAEA,QAAMI,cAAc,GAAG,CAAC,CAACjB,KAAzB;;AAEA,QAAMkB,aAAa,GAAG,MAAM;AAC1BF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,IAAAA,YAAY,CAACK,UAAb,CAAwB,OAAxB;;AACA,QAAItB,WAAJ,EAAiB;AACfuB,MAAAA,YAAY,CAACvB,WAAD,CAAZ;AACD;AACF,GAND;;AAQA,QAAMwB,YAAY,GAAG,CAACrB,KAAD,EAAQK,cAAR,KAA2B;AAC9CW,IAAAA,QAAQ,CAAChB,KAAD,CAAR;AACAc,IAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BtB,KAA9B;AACA,UAAMU,aAAa,GAAGN,sBAAsB,CAACC,cAAD,CAA5C;AACAR,IAAAA,WAAW,GAAG0B,UAAU,CAACL,aAAD,EAAgB,IAAhB,CAAxB;AACD,GALD;;AAOA,QAAMM,YAAY,GAAG;AACnBxB,IAAAA,KAAK,EAAEA,KADY;AAEnBC,IAAAA,UAAU,EAAEgB,cAFO;AAGnBQ,IAAAA,KAAK,EAAEJ,YAHY;AAInBlB,IAAAA,MAAM,EAAEe;AAJW,GAArB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEM,YAA7B;AAAA,cACGZ,KAAK,CAACc;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjCM;;GAAMf,mB;;KAAAA,mB;AAmCb,eAAeb,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  Login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const adjRmeianingTime = new Date(expirationTime).getTime();\r\n\r\n  const remainingTime = adjRmeianingTime - currentTime;\r\n\r\n  return remainingTime;\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const initialToken = localStorage.getItem(\"token\");\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logoutHandler = () => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  };\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n    logoutTimer = setTimeout(logoutHandler, 3000);\r\n  };\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}